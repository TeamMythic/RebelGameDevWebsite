@import url('https://fonts.googleapis.com/css2?family=New+Amsterdam&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Archivo+Black&display=swap');
/*
For css to color filter generator for svg color change I used: https://angel-rs.github.io/css-color-filter-generator/
*/

body.grid{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh; /*NOT USING in index.html so it's not the full screen*/
    max-width: 95vw;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    padding: 20px;
}

.container .hexagonArea {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: -45px; /* Reduced gap between rows */
    transition: .5s;
}

.container .hexagonArea.row1,
.container .hexagonArea.row2 {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}

.container .hexagonArea.mobileRow1,
.container .hexagonArea.mobileRow2,
.container .hexagonArea.mobileRow3 {
    display: none;
}

.container .hexagonArea .hexagon {
    position: relative;
    width: 90%;
    height: 90%;
    clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);
    background: rgb(48, 76, 111);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    cursor: pointer;
    transition: .25s;
}

.hexagon-border {
    position: relative;
    width: 12vw;/*200, 233*/
    height: 14vw;
    margin: 10px;
    clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);
    background: rgb(13, 13, 29);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    cursor: pointer;
    transition: .25s;
}


.container .hexagonArea .hexagon-wrapper {
    filter: drop-shadow(10px 6px 2px rgba(0, 0, 0, 0.5));
    transition: .5s;
    
}
.container .hexagonArea .hexagon-wrapper:hover {
    filter: drop-shadow(0 0 30px rgba(0, 0, 0, 1));
}

.container .hexagonArea .hexagon-wrapper a {
    text-decoration: none;
}

.container .hexagonArea .hexagon svg {
    width: 5vw;
    transition: fill .5s;
}

.container .hexagonArea .hexagon:active svg {
    fill: rgb(0, 0, 0)
}
.container .hexagonArea .hexagon:hover h3 {
    color: rgb(255, 183, 116)
}

.container .hexagonArea .hexagon:active h3 {
    color: rgb(0, 0, 0)
}

.container .hexagonArea .hexagon h3 {
    text-transform: uppercase;
    font-family: "Archivo Black", sans-serif;
    color: rgb(255, 255, 255);
    font-style: normal;
    font-weight: 600;
    margin-top: 10px;
    font-size: 1.25vw;
    text-align: center;
    letter-spacing: 1px;
    backface-visibility: hidden;
    transform: rotate(0deg);
    transition: .25s;
}

#center-hex {
    background: rgb(150, 59, 59);
}
#center-hex:hover {
    background: rgb(160, 87, 53);
}

.hexagon svg path {
    fill: #e8eaed;
}

.grid .fa-primary svg {
    fill: var(rgb(255, 255, 255));
}
.grid .fa-secondary svg{
    fill: var(rgb(255, 1, 1));
}
#center-hex:hover .fa-primary svg{
    fill: rgb(0, 0, 0)
}
#center-hex:hover h3{
    color: rgb(0, 0, 0)
}

#center-hex:active {
    background: rgb(255, 255, 255);
}
#center-hex:active svg{
    fill: rgb(0, 0, 0)
}
#center-hex:active h3{
    color: rgb(0, 0, 0)
}

.container .hexagonArea .hexagon:hover {
    background: rgb(150, 59, 59);
    transform: scale(0.85);
}

.container .hexagonArea .hexagon:active {
    background: rgb(116, 116, 116);
    transform: scale(0.65);
}


/* Media Query for tablets and mobile devices */
@media (max-width: 968px) {
    .container .hexagonArea.row1,
    .container .hexagonArea.row2 {
        display: none;
    }

    .container .hexagonArea.mobileRow1,
    .container .hexagonArea.mobileRow3 {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 0px; /* Reduced grid gap */
    }

    .container .hexagonArea.mobileRow2 {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 0px; /* Reduced grid gap */
    }

    .container .hexagonArea .hexagon-border {
        width: 23vw;/*133, 155*/
        height: 26vw;
    }
    .container .hexagonArea .hexagon h3 {
        font-size: 2.5vw;
    }
    .container .hexagonArea .hexagon svg {
        width: 8vw;
    }
}

/* Media Query for very small mobile devices */
@media (max-width: 588px) {
    .container .hexagonArea.row1,
    .container .hexagonArea.row2 {
        display: none;
    }

    .container .hexagonArea.mobileRow1,
    .container .hexagonArea.mobileRow3 {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 0px; /* Reduced grid gap */
    }

    .container .hexagonArea.mobileRow2 {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-gap: 0px; /* Reduced grid gap */
    }

    .container .hexagonArea .hexagon-border {
        width: 25vw;/*100, 115*/
        height: 28vw;
    }

    .container .hexagonArea .hexagon h3 {
        font-size: 2.5vw;
    }
    .container .hexagonArea .hexagon svg {
        width: 8vw;
    }
}